// =============================================================
// Curso de JavaScript e TypeScript
// Prof¬∫ Luiz Ot√°vio Miranda
// Ex004 - Tipos Primitivos
// Isabelli Cristina Mocci - 05/03/2025
// =============================================================

/*
    üîπ Tipos Primitivos:

    Em JavaScript, existem 7 tipos primitivos, que s√£o **imut√°veis** 
    e armazenam valores diretamente na mem√≥ria.

    Os tipos primitivos s√£o:
      1Ô∏è‚É£ string    ‚Üí Cadeia de caracteres
      2Ô∏è‚É£ number    ‚Üí N√∫meros (inteiros e decimais)
      3Ô∏è‚É£ boolean   ‚Üí Verdadeiro ou falso
      4Ô∏è‚É£ undefined ‚Üí Vari√°vel declarada sem valor
      5Ô∏è‚É£ null      ‚Üí Representa a aus√™ncia de valor
      6Ô∏è‚É£ bigint    ‚Üí N√∫meros inteiros grandes
      7Ô∏è‚É£ symbol    ‚Üí Valores √∫nicos, usados para identifica√ß√£o
*/

// =============================================================
// üîπ Exemplos de cada tipo primitivo:

// 1Ô∏è‚É£ String ‚Üí Texto dentro de aspas
const nome = "Isabelli";  // Pode usar aspas simples ('') ou crase (``)
console.log(nome, typeof nome);  // Sa√≠da: Isabelli string

// =============================================================

// 2Ô∏è‚É£ Number ‚Üí Pode ser inteiro ou decimal
const idade = 25;
const altura = 1.65;
console.log(idade, typeof idade);  // Sa√≠da: 25 number
console.log(altura, typeof altura);  // Sa√≠da: 1.65 number

// =============================================================

// 3Ô∏è‚É£ Boolean ‚Üí Apenas dois valores poss√≠veis: true (verdadeiro) ou false (falso)
const temCarteira = true;
const estaChovendo = false;
console.log(temCarteira, typeof temCarteira);  // Sa√≠da: true boolean
console.log(estaChovendo, typeof estaChovendo);  // Sa√≠da: false boolean

// =============================================================

// 4Ô∏è‚É£ Undefined ‚Üí Uma vari√°vel declarada sem valor inicial
let endereco;
console.log(endereco, typeof endereco);  // Sa√≠da: undefined undefined

// =============================================================

// 5Ô∏è‚É£ Null ‚Üí Representa aus√™ncia de valor (dado manualmente)
const contaBancaria = null;
console.log(contaBancaria, typeof contaBancaria);  // Sa√≠da: null object (BUG do JavaScript!)

// =============================================================

// 6Ô∏è‚É£ BigInt ‚Üí Usado para n√∫meros muito grandes (precisa de "n" no final)
const numeroGrande = 123456789012345678901234567890n;
console.log(numeroGrande, typeof numeroGrande);  // Sa√≠da: 123456789012345678901234567890n bigint

// =============================================================

// 7Ô∏è‚É£ Symbol ‚Üí Garante um valor √∫nico, √∫til para identificar propriedades de objetos
const simbolo1 = Symbol("id");
const simbolo2 = Symbol("id");
console.log(simbolo1 === simbolo2);  // Sa√≠da: false (mesmo nome, mas s√£o diferentes)
console.log(simbolo1, typeof simbolo1);  // Sa√≠da: Symbol(id) symbol
