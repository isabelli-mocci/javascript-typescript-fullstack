// =============================================================
// Curso de JavaScript e TypeScript
// Prof¬∫ Luiz Ot√°vio Miranda
// Aula 36 - Closure
// Isabelli Cristina Mocci - 01/04/2025
// =============================================================

/*
    üîπ Closure

    Closure ocorre quando uma fun√ß√£o "lembra" do seu escopo l√©xico, mesmo ap√≥s a execu√ß√£o da fun√ß√£o externa.

    üîπ Caracter√≠sticas do Closure:
      ‚Æ° ‚úÖ A fun√ß√£o interna pode acessar vari√°veis do seu escopo externo, mesmo que a fun√ß√£o externa j√° tenha sido executada.
      ‚Æ° ‚úÖ A vari√°vel do escopo da fun√ß√£o externa permanece acess√≠vel √† fun√ß√£o interna, criando o "fechamento" do escopo.
      ‚Æ° ‚ùå A fun√ß√£o externa n√£o pode acessar vari√°veis da fun√ß√£o interna, pois a fun√ß√£o interna vive dentro de um escopo local.

*/

// =============================================================
// üîπ Exemplo de Closure - Controle de Envio de Formul√°rio
// =============================================================

// A fun√ß√£o de envio de formul√°rio mant√©m o controle de quantas vezes o formul√°rio foi enviado.
// Cada inst√¢ncia da fun√ß√£o de envio "lembra" do contador de envios, mesmo ap√≥s o envio do formul√°rio.

function criarFormulario() {
  let contadorEnvios = 0; // ‚Üê escopo da fun√ß√£o externa, vari√°vel de controle

  function enviarFormulario() {
    contadorEnvios++; // incrementa o contador a cada envio
    console.log(`Formul√°rio enviado ${contadorEnvios} vez(es)!`); // exibe o n¬∫ de envios
  }

  return enviarFormulario; // retorna a fun√ß√£o que mant√©m o controle dos envios
}

const formulario = criarFormulario(); // cria uma inst√¢ncia do formul√°rio

formulario(); // Sa√≠da: Formul√°rio enviado 1 vez!
formulario(); // Sa√≠da: Formul√°rio enviado 2 vezes!
formulario(); // Sa√≠da: Formul√°rio enviado 3 vezes!

// ‚ö†Ô∏è Mesmo ap√≥s v√°rias execu√ß√µes, a fun√ß√£o enviarFormulario() mant√©m o valor de contadorEnvios
// pois ela "lembra" do escopo da fun√ß√£o externa/pai criarFormulario() ‚Üí (closure).

// =============================================================